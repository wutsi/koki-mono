name: koki-chatbot-messenger


on:
    push:
        branches:
            - master
        paths:
            - 'modules/koki-chatbot-messenger/**'
            - '.github/workflows/koki-chatbot-messenger-master.yml'

jobs:
    build:
        runs-on: ubuntu-latest

        services:
            rabbitmq:
                image: rabbitmq:4.1
                env:
                    RABBITMQ_DEFAULT_USER: guest
                    RABBITMQ_DEFAULT_PASS: guest
                ports:
                    - 5672:5672
            redis:
                image: redis
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            -   uses: actions/checkout@v4
            -   name: JDK
                uses: actions/setup-java@v4
                with:
                    distribution: 'zulu'
                    java-version: 17

            -   name: Build
                env:
                    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
                    GEMINI_API_KEY: ${{secrets.GEMINI_API_KEY_TEST}}
                    DEEPSEEK_API_KEY: ${{secrets.DEEPSEEK_API_KEY_TEST}}
                    MESSENGER_TOKEN: ${{secrets.MESSENGER_TOKEN_TEST}}
                    MESSENGER_VERIFY_TOKEN: ${{secrets.MESSENGER_VERIFY_TOKEN_TEST}}
                run: |
                    mvn -q -s settings.xml --non-recursive install
                    cd modules/koki-chatbot-messenger
                    mvn -q -s ../../settings.xml install

            -   name: Upload app bundle
                uses: actions/upload-artifact@v4
                with:
                    name: appbundle
                    path: modules/koki-chatbot-messenger/target/*.jar

            -   name: Upload JaCoCo Report
                uses: actions/upload-artifact@v4
                with:
                    name: jacoco-report
                    path: modules/koki-chatbot-messenger/target/site/jacoco/**/*

            -   name: Generate JaCoCo Badge
                uses: cicirello/jacoco-badge-generator@v2
                with:
                    generate-branches-badge: false
                    jacoco-csv-file: modules/koki-chatbot-messenger/target/site/jacoco/jacoco.csv
                    coverage-badge-filename: koki-chatbot-messenger-jococo.svg

            -   name: Commit the badge (if it changed)
                continue-on-error: true
                run: |
                    if [[ `git status --porcelain` ]]; then
                      git config user.email "actions@github.com"
                      git config user.name "GitHub Actions"
                      git add -A
                      git commit -m "Autogenerated JaCoCo coverage badge"
                      git push
                    fi

            -   name: HerokuCLI
                run: |
                    curl https://cli-assets.heroku.com/install.sh | sh
                    heroku plugins:install @heroku-cli/plugin-java

            -   name: Get artifact
                uses: actions/download-artifact@v5
                with:
                    name: appbundle

            -   name: Heroku-Deploy-Test
                env:
                    HEROKU_APP: koki-chatbot-messenger-test
                    APP_URL: ${{secrets.KOKI_CHATBOT_MESSENGER_URL_TEST}}
                    AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_TEST}}
                    AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY_TEST}}
                    KOKI_SERVER_URL: ${{secrets.KOKI_SERVER_URL_TEST}}
                    HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY_TEST}}
                    GEMINI_API_KEY: ${{secrets.GEMINI_API_KEY_TEST}}
                    DEEPSEEK_API_KEY: ${{secrets.DEEPSEEK_API_KEY_TEST}}
                    CLOUDAMQP_URL: ${{secrets.CLOUDAMQP_URL_TEST}}
                    MESSENGER_TOKEN: ${{secrets.MESSENGER_TOKEN_TEST}}
                    MESSENGER_VERIFY_TOKEN: ${{secrets.MESSENGER_VERIFY_TOKEN_TEST}}
                    REDISCLOUD_URL: ${{secrets.REDISCLOUD_URL_TEST}}
                run: |
                    heroku apps | grep ${HEROKU_APP} && echo 'app: ${HEROKU_APP} exists' ||  heroku apps:create ${HEROKU_APP}
                    heroku buildpacks:clear --app ${HEROKU_APP}
                    heroku buildpacks:add heroku/jvm --app ${HEROKU_APP}
                    heroku config:set --app ${HEROKU_APP} APP_PROFILE=test
                    heroku config:set --app ${HEROKU_APP} APP_URL=${APP_URL}
                    heroku config:set --app ${HEROKU_APP} AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
                    heroku config:set --app ${HEROKU_APP} AWS_SECRET_KEY=${AWS_SECRET_KEY}
                    heroku config:set --app ${HEROKU_APP} KOKI_SERVER_URL=${KOKI_SERVER_URL}
                    heroku config:set --app ${HEROKU_APP} GEMINI_API_KEY=${GEMINI_API_KEY}
                    heroku config:set --app ${HEROKU_APP} DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
                    heroku config:set --app ${HEROKU_APP} MESSENGER_TOKEN=${MESSENGER_TOKEN}
                    heroku config:set --app ${HEROKU_APP} MESSENGER_VERIFY_TOKEN=${MESSENGER_VERIFY_TOKEN}
                    heroku config:set --app ${HEROKU_APP} CLOUDAMQP_URL=${CLOUDAMQP_URL}
                    heroku config:set --app ${HEROKU_APP} REDISCLOUD_URL=${REDISCLOUD_URL}
                    heroku addons -a ${HEROKU_APP} | grep papertrail && echo 'addon: papertrail exists' ||  heroku addons:create papertrail -a ${HEROKU_APP}
                    cp modules/koki-chatbot-messenger/system.properties .
                    cp modules/koki-chatbot-messenger/Procfile .
                    heroku deploy:jar koki-chatbot-messenger.jar --app ${HEROKU_APP}

            -   name: Health check
                env:
                    APP_URL: ${{secrets.KOKI_CHATBOT_MESSENGER_URL_TEST}}
                run: |
                    sleep 45
                    echo ${APP_URL}
                    curl -sSf ${APP_URL}/actuator/health >> /dev/null || curl -sSf ${APP_URL}/actuator/health >> /dev/null
